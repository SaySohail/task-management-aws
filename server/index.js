require("dotenv").config();
const express = require("express");
const app = express();
const bodyParser = require("body-parser");
const cors = require("cors");
const AuthRouter = require("./routes/AuthRouter");
const TaskRouter = require("./routes/TaskRouter");
const path = require('path');


require("./models/db");


app.use(bodyParser.json());
app.use(cors());

app.use("/auth",AuthRouter );
app .use("/api",TaskRouter);




app.get("/ping",(req,res)=>{
    res.send("Pong");
})

app.listen(PORT,()=>{
    console.log(`Server is running on port ${PORT}`);

})

app.get('/healthz', (_req, res) => res.status(200).send('ok'));

app.use(express.json());

// --- Static frontend (Next export) ---

const publicDir = path.join(__dirname, 'public');
app.use(express.static(publicDir, { maxAge: '1h', index: false }));
// If a request isn't an API route and a matching file exists, it will be served.
// For unmatched routes, try to serve a 404 page generated by Next export:
app.get('*', (req, res) => {
  const filePath = path.join(publicDir, req.path);
  // You can add logic to check if file exists; simplest:
  res.sendFile(path.join(publicDir, '404.html'), err => {
    if (err) res.sendFile(path.join(publicDir, 'index.html')); // fallback
  });
});

const PORT = process.env.PORT || 8080;
app.listen(PORT, '0.0.0.0', () => {
  console.log(`Server listening on ${PORT}`);
});